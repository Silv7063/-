package com.javaproject;

import com.javaproject.dashboard.Form_Home;

import java.awt.*;
import java.sql.*;
import java.time.LocalDate;

import javax.swing.*;

public class AttendanceJDialog extends javax.swing.JDialog {
    private Connection con = null; 
    private PreparedStatement stmt = null;
    private int mode;
    private String date;
    private int update;

    public void ConnectMysql(int mode)
    {
        try {
                con = DatabaseManager.getConnection();
                stmt = con.prepareStatement("SELECT COUNT(id) FROM attendance WHERE employee_name = ? AND date = ?");
                stmt.setString(1, jTextField1.getText());
                stmt.setString(2, jTextField2.getText());
                ResultSet rs = stmt.executeQuery();

                if (rs.next() && rs.getInt(1) > 0 && !jTextField2.getText().equals(date)) {
                    ImageIcon icon = new ImageIcon(getClass().getResource("/employee.png"));
                    JOptionPane pane = new JOptionPane("在資料庫有相同的記錄", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = pane.createDialog("失敗");
                    setBackgroundRecursively(pane, Color.WHITE);
                    dialog.setIconImage(icon.getImage());
                    dialog.setVisible(true);
                }
                else {
                    if (mode == 0) {
                        stmt = con.prepareStatement("INSERT INTO attendance (employee_name, date, sign_in, sign_out) VALUES (?, ?, ?, ?)");
                        stmt.setString(1, jTextField1.getText());
                        stmt.setString(2, jTextField2.getText());
                        stmt.setString(3, jTextField3.getText());
                        stmt.setString(4, jTextField4.getText());
                        stmt.executeUpdate();
                    } else if (mode == 1) {
                        stmt = con.prepareStatement("UPDATE attendance SET date = ?, sign_in = ?, sign_out = ? WHERE employee_name = ? AND date = ?");
                        stmt.setString(1, jTextField2.getText());
                        stmt.setString(2, jTextField3.getText());
                        stmt.setString(3, jTextField4.getText());
                        stmt.setString(4, jTextField1.getText());
                        stmt.setString(5, date);
                        stmt.executeUpdate();
                    }
                }
        } catch (SQLException ce) {
                ce.printStackTrace();
        } finally {
                if (stmt != null) { 
                        try {
                                stmt.close();
                        } catch (SQLException se) {
                                se.printStackTrace();
                        }
                }
                if (con != null) { 
                        try {
                                con.close();
                        } catch (SQLException se) {
                                se.printStackTrace();
                        }
                }
        }
    }

    public AttendanceJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jPanel1.setBackground(Color.WHITE);
        mode = 0;
        LocalDate today = LocalDate.now();
        String formattedDate = today.toString();
        jTextField2.setText(formattedDate);
        
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                if (update == 1)
                {
                    Attendance.SystemIndex.ConnectMysql("UPDATE TABLE", 1);
                    Form_Home.SystemIndex.ConnectMysql();
                }
            }
        });
    }
    
    public AttendanceJDialog(java.awt.Frame parent, boolean modal, String[] rowData) {
        super(parent, modal);
        initComponents();
        jPanel1.setBackground(Color.WHITE);
        date = rowData[1];
        jTextField1.setText(rowData[0]);
        jTextField2.setText(rowData[1]);
        jTextField3.setText(rowData[2]);
        jTextField4.setText(rowData[3]);
        jButton1.setText("更新");
        jTextField1.setEnabled(false);
        mode = 1;

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                if (update == 1)
                {
                    Attendance.SystemIndex.ConnectMysql("UPDATE TABLE", 1);
                    Form_Home.SystemIndex.ConnectMysql();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new com.javaproject.gui2.TextField();
        jTextField2 = new com.javaproject.gui2.TextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new com.javaproject.gui2.TextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new com.javaproject.gui2.TextField();
        jButton1 = new com.javaproject.gui2.Button();
        jButton2 = new com.javaproject.gui2.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel1.setText("員工姓名");
        jLabel1.setToolTipText("");
        jLabel1.setMaximumSize(new java.awt.Dimension(100, 40));
        jLabel1.setMinimumSize(new java.awt.Dimension(100, 40));
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 40));

        jTextField1.setText("範例");
        jTextField1.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextField1.setPreferredSize(new java.awt.Dimension(300, 50));

        jTextField2.setText("2024-05-24");
        jTextField2.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextField2.setPreferredSize(new java.awt.Dimension(300, 50));

        jLabel2.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel2.setText("日期");
        jLabel2.setMaximumSize(new java.awt.Dimension(100, 40));
        jLabel2.setMinimumSize(new java.awt.Dimension(100, 40));
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 40));

        jLabel4.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel4.setText("簽到時間");
        jLabel4.setMaximumSize(new java.awt.Dimension(100, 40));
        jLabel4.setMinimumSize(new java.awt.Dimension(100, 40));
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 40));

        jTextField3.setText("09:00:00");
        jTextField3.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextField3.setPreferredSize(new java.awt.Dimension(300, 50));

        jLabel3.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel3.setText("簽退時間");
        jLabel3.setMaximumSize(new java.awt.Dimension(100, 40));
        jLabel3.setMinimumSize(new java.awt.Dimension(100, 40));
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 40));

        jTextField4.setText("17:00:00");
        jTextField4.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextField4.setPreferredSize(new java.awt.Dimension(300, 50));

        jButton1.setBackground(new java.awt.Color(30, 180, 114));
        jButton1.setForeground(new java.awt.Color(245, 245, 245));
        jButton1.setText("新增");
        jButton1.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButton1.setMaximumSize(new java.awt.Dimension(100, 50));
        jButton1.setMinimumSize(new java.awt.Dimension(100, 50));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 50));
        jButton1.setRippleColor(new java.awt.Color(255, 255, 255));
        jButton1.setShadowColor(new java.awt.Color(30, 180, 114));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(253, 83, 83));
        jButton2.setForeground(new java.awt.Color(245, 245, 245));
        jButton2.setText("取消");
        jButton2.setToolTipText("");
        jButton2.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(100, 50));
        jButton2.setMinimumSize(new java.awt.Dimension(100, 50));
        jButton2.setName(""); // NOI18N
        jButton2.setPreferredSize(new java.awt.Dimension(100, 50));
        jButton2.setRippleColor(new java.awt.Color(255, 255, 255));
        jButton2.setShadowColor(new java.awt.Color(253, 83, 83));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(100, 100, 100)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        dispose();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        ImageIcon icon = new ImageIcon(getClass().getResource("/employee.png"));

        if (jTextField1.getText().isEmpty() || jTextField2.getText().isEmpty() || jTextField4.getText().isEmpty() || jTextField3.getText().isEmpty()) {
            JOptionPane pane = new JOptionPane("不能為空白", JOptionPane.ERROR_MESSAGE);
            JDialog dialog = pane.createDialog("錯誤");
            setBackgroundRecursively(pane, Color.WHITE);
            dialog.setIconImage(icon.getImage());
            dialog.setVisible(true);
        } else if (!jTextField1.getText().matches("^[\\u4e00-\\u9fa5A-Za-z\\s]+$")) {
            JOptionPane pane = new JOptionPane("員工姓名只能是中文或英文", JOptionPane.ERROR_MESSAGE);
            JDialog dialog = pane.createDialog("錯誤");
            setBackgroundRecursively(pane, Color.WHITE);
            dialog.setIconImage(icon.getImage());
            dialog.setVisible(true);
        } else if (!jTextField2.getText().matches("^\\d{4}-\\d{2}-\\d{2}$")) {
            JOptionPane pane = new JOptionPane("日期只能是 YYYY-MM-DD", JOptionPane.ERROR_MESSAGE);
            JDialog dialog = pane.createDialog("錯誤");
            setBackgroundRecursively(pane, Color.WHITE);
            dialog.setIconImage(icon.getImage());
            dialog.setVisible(true);
        } else if (!jTextField3.getText().matches("^\\d{2}:\\d{2}:\\d{2}$") || (!jTextField4.getText().matches("^\\d{2}:\\d{2}:\\d{2}$") && !jTextField4.getText().equals("~"))) {
            JOptionPane pane = new JOptionPane("時間只能是 HH:MM:SS", JOptionPane.ERROR_MESSAGE);
            JDialog dialog = pane.createDialog("錯誤");
            setBackgroundRecursively(pane, Color.WHITE);
            dialog.setIconImage(icon.getImage());
            dialog.setVisible(true);
        } else {
            String[] dateParts = jTextField2.getText().split("-");
            int year = Integer.parseInt(dateParts[0]);
            int month = Integer.parseInt(dateParts[1]);
            int day = Integer.parseInt(dateParts[2]);

            if (year < 1900 || year > 2100) {
                JOptionPane pane = new JOptionPane("年必須在 1900 到 2100 之間", JOptionPane.ERROR_MESSAGE);
                JDialog dialog = pane.createDialog("錯誤");
                setBackgroundRecursively(pane, Color.WHITE);
                dialog.setIconImage(icon.getImage());
                dialog.setVisible(true);
            } else if (month < 1 || month > 12) {
                JOptionPane pane = new JOptionPane("月必須在 1 到 12 之間", JOptionPane.ERROR_MESSAGE);
                JDialog dialog = pane.createDialog("錯誤");
                setBackgroundRecursively(pane, Color.WHITE);
                dialog.setIconImage(icon.getImage());
                dialog.setVisible(true);
            } else if (day < 1 || day > 31) {
                JOptionPane pane = new JOptionPane("日必須在 1 到 31 之間", JOptionPane.ERROR_MESSAGE);
                JDialog dialog = pane.createDialog("錯誤");
                setBackgroundRecursively(pane, Color.WHITE);
                dialog.setIconImage(icon.getImage());
                dialog.setVisible(true);
            } else {
                boolean isLeapYear = (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
                int[] daysInMonth = {31, isLeapYear ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

                if (day > daysInMonth[month - 1]) {
                    JOptionPane pane = new JOptionPane("日期不在有效範圍內", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = pane.createDialog("錯誤");
                    setBackgroundRecursively(pane, Color.WHITE);
                    dialog.setIconImage(icon.getImage());
                    dialog.setVisible(true);
                } else {
                    int check = 0;
                    String[] timeParts1 = jTextField3.getText().split(":");
                    int hour1 = Integer.parseInt(timeParts1[0]);
                    int minute1 = Integer.parseInt(timeParts1[1]);
                    int second1 = Integer.parseInt(timeParts1[2]);
                    boolean isValidTime1 = hour1 >= 0 && hour1 < 24 && minute1 >= 0 && minute1 <= 59 && second1 >= 0 && second1 <= 59;

                    if (!isValidTime1) {
                        JOptionPane pane = new JOptionPane("時間超出有效範圍", JOptionPane.ERROR_MESSAGE);
                        JDialog dialog = pane.createDialog("錯誤");
                        setBackgroundRecursively(pane, Color.WHITE);
                        dialog.setIconImage(icon.getImage());
                        dialog.setVisible(true);
                    } else {
                        check ++;
                    }

                    if (!jTextField4.getText().equals("~"))
                    {
                        String[] timeParts2 = jTextField4.getText().split(":");
                        int hour2 = Integer.parseInt(timeParts2[0]);
                        int minute2 = Integer.parseInt(timeParts2[1]);
                        int second2 = Integer.parseInt(timeParts2[2]);
                        boolean isValidTime2 = hour2 >= 0 && hour2 < 24 && minute2 >= 0 && minute2 <= 59 && second2 >= 0 && second2 <= 59;

                        if (!isValidTime2) {
                            JOptionPane pane = new JOptionPane("時間超出有效範圍", JOptionPane.ERROR_MESSAGE);
                            JDialog dialog = pane.createDialog("錯誤");
                            setBackgroundRecursively(pane, Color.WHITE);
                            dialog.setIconImage(icon.getImage());
                            dialog.setVisible(true);
                        } else {
                            check ++;
                        }
                    }
                    else
                    {
                        check ++;
                    }

                    if (check == 2) {
                        // 所有檢查都通過，進行更新和關閉窗口
                        update = 1;
                        ConnectMysql(mode);
                        dispose();
                    }
                }
            }
        }
    }

    private static void setBackgroundRecursively(Component component, Color color) {
        if (component instanceof JComponent) {
            ((JComponent) component).setOpaque(true);
            component.setBackground(color);
        }
        if (component instanceof Container) {
            for (Component child : ((Container) component).getComponents()) {
                setBackgroundRecursively(child, color);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.javaproject.gui2.Button jButton1;
    private com.javaproject.gui2.Button jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private com.javaproject.gui2.TextField jTextField1;
    private com.javaproject.gui2.TextField jTextField2;
    private com.javaproject.gui2.TextField jTextField3;
    private com.javaproject.gui2.TextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
